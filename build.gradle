plugins {
    //https://github.com/google/protobuf-gradle-plugin
    id "com.google.protobuf" version "0.8.14"
    id 'java'
    id 'idea'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.14'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.14.0'
    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    compile group: 'io.grpc', name: 'grpc-all', version: '1.34.1'

    //protobuf files('src/main/pb')
}

jar {
    manifest {
        attributes 'Main-Class': "Main"
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/pb'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}

protobuf {
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.34.1'
        }
    }

    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.14.0'
    }
    generateProtoTasks.generatedFilesBaseDir = 'generated-sources'

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        all().each { task ->
            // Here you can configure the task
        }
        ofSourceSet('main')
    }
}